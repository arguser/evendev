version: '3'

services:
  urbit-zod:
    container_name: urbit-fakezod
    image: tloncorp/urbit:latest
    working_dir: /urbit
    user: 1000:1000
    command: sh -c "[ -df ./zod ] && rm /urbit/zod/.vere.lock && /bin/urbit -t zod -p 34343 ||  /bin/urbit -t -F zod -p 34343 "
    volumes:
      - ../:/urbit
    ports:
      - 81:80

  # urbit-bus:
  #   container_name: urbit-fakebus
  #   image: tloncorp/urbit:latest
  #   user: 1000:1000
  #   command: sh -c "[ -d ./bus ] && rm /urbit/bus/.vere.lock && /bin/urbit -t bus -p 34343 || /bin/urbit -t -F bus -p 34343 "
  #   volumes:
  #     - ../:/urbit
  #   ports:
  #     - 82:80


  development:
    container_name: urbit-development
    build:
      context: .
      dockerfile: Dockerfile
      args:
        UPGRADE_PACKAGES: "true"
        USE_MOBY: "false"

    volumes:
      # Forwards the local Docker socket to the container.
      - /var/run/docker.sock:/var/run/docker-urbit_development_network.sock
      # Update this to wherever you want VS Code to mount the folder of your project
      - ..:/workspace

    # Overrides default command so things don't shut down after the process ends.
    entrypoint: /usr/local/share/docker-init.sh
    command: sleep infinity
    # Uncomment the next four lines if you will use a ptrace-based debuggers like C++, Go, and Rust.
    # cap_add:
    #  - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Uncomment the next line to use a non-root user for all processes.
    user: vscode

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)